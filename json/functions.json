{
  "functions": {
    "DEAL_ENCOUNTER_CARD": {
      "args": [
        {"$FACE_UP": false},
        {"$GROUP_ID": "sharedEncounterDeck"},
        {"$PLAYER": "$PLAYER_N"},
        {"$CONTROLLER": "$ALIAS_N"}
      ],
      "code": [
        ["VAR", "$GROUP", "$GAME.groupById.$GROUP_ID"],
        ["COND",
          ["EQUAL", ["LENGTH", "$GROUP.stackIds"], 0],
          ["LOG", "{{$GROUP.label}} is empty."],
          true,
          [
            ["VAR", "$CARD_ID", ["GET_CARD_ID", "$GROUP_ID", 0, 0]],
            ["MOVE_CARD", "$CARD_ID", "{{$PLAYER}}Engaged", -1, 0, ["PROCESS_MAP", {"allowFlip": "$FACE_UP"}]],
            ["COND",
              ["DEFINED", "$CONTROLLER"],
              ["LOG", "{{$CONTROLLER}} dealt an encounter card."]
            ]
          ]
        ]
      ]
    },
    "DISCARD_CARD": {
      "args": ["$DISCARD_CARD_ID", {"$CONTROLLER": "$ALIAS_N"}],
      "code": [
        ["VAR", "$DISCARD_CARD", "$GAME.cardById.$DISCARD_CARD_ID"],
        ["COND",
          ["EQUAL", "$DISCARD_CARD.discardGroupId", null],
          ["COND",
            ["DEFINED", "$CONTROLLER"],
            ["LOG", "{{$CONTROLLER}} failed to discard {{$DISCARD_CARD.currentFace.name}} because it is not associated with a discard pile. Please drag the card instead."]
          ],
          true,
          [
            ["COND",
              ["DEFINED", "$CONTROLLER"],
              ["LOG", "{{$CONTROLLER}} discarded {{$DISCARD_CARD.currentFace.name}}."]
            ],
            ["SET", "/cardById/$DISCARD_CARD.id/rotation", 0],
            ["COND",
              ["AND",
                ["EQUAL", "$DISCARD_CARD.sides.A.type", "Villain"],
                ["GREATER_THAN", ["LENGTH", "$GAME.groupById.sharedVillainDeck.stackIds"], 0]
              ],
              [
                ["VAR", "$CARD_ID", "$GAME.groupById.sharedVillainDeck.parentCardIds.[0]"],
                ["MOVE_CARD", "$CARD_ID", "sharedVillain", 0],
                ["SET_VILLAIN_HEALTH", "$CARD_ID"],
                ["FOR_EACH_KEY_VAL", "$TOKEN", "$VALUE", "$DISCARD_CARD.tokens",
                  ["COND",
                    ["NOT", ["EQUAL", "$TOKEN", "damage"]],
                    ["SET", "/cardById/$CARD_ID/tokens/$TOKEN", "$VALUE"]
                  ]
                ]
              ]
            ],
            ["MOVE_CARD", "$DISCARD_CARD.id", "$DISCARD_CARD.discardGroupId", 0],
            ["COND",
              ["AND",
                ["EQUAL", "$DISCARD_CARD.sides.A.type", "Main Scheme"],
                ["GREATER_THAN", ["LENGTH", "$GAME.groupById.sharedMainSchemeDeck.stackIds"], 0]
              ],
              [
                ["VAR", "$CARD_ID", "$GAME.groupById.sharedMainSchemeDeck.parentCardIds.[0]"],
                ["MOVE_CARD", "$CARD_ID", "sharedMainScheme", 0],
                ["SET_SCHEME_STARTING_THREAT", "$CARD_ID"]
              ]
            ]
          ]
        ]
      ]
    },
    "DISCARD_UNTIL": {
      "args": ["$SOURCE_GROUP_ID", "$DEST_GROUP_ID", "$COND", {"$CONTROLLER": null}],
      "code": [
        ["VAR", "$CARD_ITEM_ID", "$GAME.groupById.$SOURCE_GROUP_ID.parentCardIds.[0]"],
        ["VAR", "$CARD_ITEM", "$GAME.cardById.$CARD_ITEM_ID"],
        ["WHILE",
          ["AND",
            ["NOT", ["ACTION_LIST", "$COND"]],
            ["GREATER_THAN", ["LENGTH", "$GAME.groupById.$SOURCE_GROUP_ID.stackIds"], 1]
          ],
          [
            ["DISCARD_CARD", "$CARD_ITEM_ID", "$CONTROLLER"],
            ["UPDATE_VAR", "$CARD_ITEM_ID", "$GAME.groupById.$SOURCE_GROUP_ID.parentCardIds.[0]"],
            ["UPDATE_VAR", "$CARD_ITEM", "$GAME.cardById.$CARD_ITEM_ID"]
          ]
        ],
        ["VAR", "$CARD_ITEM_ID", "$GAME.groupById.$SOURCE_GROUP_ID.parentCardIds.[0]"],
        ["VAR", "$CARD_ITEM", "$GAME.cardById.$CARD_ITEM_ID"],
        ["COND",
          ["ACTION_LIST", "$COND"],
          ["MOVE_CARD", "$CARD_ITEM_ID", "$DEST_GROUP_ID", 0],
          true,
          ["DISCARD_CARD", "$CARD_ITEM_ID", "$CONTROLLER"]
        ]
      ]
    },
    "DRAW_HAND": {
      "args": ["$PLAYER", {"$CONTROLLER": "$ALIAS_N"}],
      "code": [
        ["VAR", "$GROUP_ID", "{{$PLAYER}}Hand"],
        ["VAR", "$HAND_SIZE", "$GAME.playerData.$PLAYER.handSize"],
        ["VAR", "$REMAINING_CARDS", ["LENGTH", "$GAME.groupById.$GROUP_ID.stackIds"]],
        ["VAR", "$DRAW_SIZE", ["SUBTRACT", "$HAND_SIZE", "$REMAINING_CARDS"]],
        ["COND",
          ["LESS_THAN", "$DRAW_SIZE", 0],
          ["UPDATE_VAR", "$DRAW_SIZE", 0]
        ],
        ["COND",
          ["DEFINED", "$CONTROLLER"],
          ["LOG", "{{$CONTROLLER}} draws {{$DRAW_SIZE}} cards."]
        ],
        ["DEFINE", "$PLAYER_N", "$PLAYER"],
        ["DRAW_CARD", "$DRAW_SIZE"],
        ["UPDATE_VAR", "$DRAW_SIZE", ["SUBTRACT", "$HAND_SIZE", ["LENGTH", "$GAME.groupById.$GROUP_ID.stackIds"]]],
        ["COND",
          ["GREATER_THAN", "$DRAW_SIZE", 0],
          ["DRAW_CARD", "$DRAW_SIZE"]
        ]
      ]
    },
    "EXHAUST_CARD": {
      "args": ["$CARD_ID", {"$CONTROLLER": "$ALIAS_N"}],
      "code": [
        ["VAR", "$CARD", "$GAME.cardById.$CARD_ID"],
        ["SET", "/cardById/$CARD_ID/rotation", 90],
        ["SET", "/cardById/$CARD_ID/exhausted", true],
        ["COND",
          ["DEFINED", "$CONTROLLER"],
          ["LOG", "{{$CONTROLLER}} exhausted {{$CARD.currentFace.name}}."]
        ]
      ]
    },
    "LOAD_MODE_CARDS": {
      "args": [{"$STANDARD": "Standard"}, {"$EXPERT": null}],
      "code": [
        [
          ["LOG", "Loading Standard Cards: {{$STANDARD}}"],
          ["LOAD_CARDS", "$STANDARD"],
          ["COND",
            ["DEFINED", "$EXPERT"],
            ["LOAD_CARDS", "$EXPERT"]
          ]
        ]
      ]
    },
    "LOAD_RECOMMENDS": {
      "args": ["$SCENARIO"],
      "code": ["COND",
        "$GAME.loadRecommends",
        [
          ["LOG", "Loading {{$SCENARIO}} recommends cards."],
          ["LOAD_CARDS", "{{$SCENARIO}} (recommends)"]
        ]
      ]
    },
    "LOAD_REQUIRED": {
      "args": ["$SCENARIO"],
      "code": ["COND",
        "$GAME.loadRequired",
        [
          ["LOG", "Loading {{$SCENARIO}} required cards."],
          ["LOAD_CARDS", "{{$SCENARIO}} (required)"]
        ]
      ]
    },
    "READY_CARD": {
      "args": ["$CARD_ID", {"$CONTROLLER": "$ALIAS_N"}],
      "code": [
        ["VAR", "$CARD", "$GAME.cardById.$CARD_ID"],
        ["SET", "/cardById/$CARD_ID/rotation", 0],
        ["SET", "/cardById/$CARD_ID/exhausted", false],
        ["SET", "/cardById/$CARD_ID/boost", false],
        ["COND",
          ["DEFINED", "$CONTROLLER"],
          ["LOG", "{{$CONTROLLER}} readied {{$CARD.currentFace.name}}."]
        ]
      ]
    },
    "READY_ALL": {
      "args": [{"$PLAYER": "$PLAYER_N"}, {"$CONTROLLER": "$ALIAS_N"}],
      "code": [
        ["LOG", "{{$ALIAS_N}} readied all their cards."],
        ["FOR_EACH_KEY_VAL", "$CARD_ID", "$CARD", "$GAME.cardById",
          ["COND",
            ["EQUAL", "$CARD.controller", "$PLAYER"],
            ["READY_CARD", "$CARD_ID"]
          ]
        ]
      ]
    },
    "SET_MODE": {
      "args": ["$MODE"],
      "code": [
        ["SET", "/mode", "$MODE"],
        ["LOG", "Mode is set to ", "$MODE"]
      ]
    },
    "SET_SIDE": {
      "args": ["$CARD_ID", "$SIDE", {"$CONTROLLER": "$ALIAS_N"}],
      "code": [
        ["VAR", "$CARD", "$GAME.cardById.$CARD_ID"],
        ["COND",
          ["DEFINED", "$CONTROLLER"],
          ["LOG", "{{$CONTROLLER}} changed {{$CARD.currentFace.name}} ({{$CARD.currentSide}}) to {{$CARD.sides.$SIDE.name}} ({{$SIDE}})."]
        ],
        ["SET", "/cardById/$CARD_ID/currentSide", "$SIDE"]
      ]
    },
    "SET_SCHEME_STARTING_THREAT": {
      "args": ["$CARD_ID"],
      "code": [
        ["VAR", "$CARD", "$GAME.cardById.$CARD_ID"],
        ["VAR", "$STARTING_THREAT", 0],
        ["VAR", "$SCHEME_FACE", "A"],
        ["COND",
          ["EQUAL", "$CARD.sides.A.type", "Main Scheme"],
          ["UPDATE_VAR", "$SCHEME_FACE", "B"]
        ],
        ["COND",
          ["NOT_EQUAL", "$CARD.sides.$SCHEME_FACE.startingThreatFixed", null],
          ["UPDATE_VAR", "$STARTING_THREAT", ["ADD", "$STARTING_THREAT", "$CARD.sides.$SCHEME_FACE.startingThreatFixed"]]
        ],
        ["COND",
          ["NOT_EQUAL", "$CARD.sides.$SCHEME_FACE.startingThreatScaling", null],
          ["UPDATE_VAR", "$STARTING_THREAT", ["ADD", "$STARTING_THREAT", ["MULTIPLY", "$CARD.sides.$SCHEME_FACE.startingThreatScaling", "$GAME.numPlayers"]]]
        ],
        [
          ["LOG", "Setting starting threat for {{$CARD.sides.$SCHEME_FACE.name}} to {{$STARTING_THREAT}}."],
          ["SET", "/cardById/$CARD_ID/tokens/threat", "$STARTING_THREAT"]
        ]
      ]
    },
    "SET_VILLAIN_HEALTH": {
      "args": ["$CARD_ID", {"$INCREASE_HIT_POINTS": 0}],
      "code": [
        ["VAR", "$CARD", "$GAME.cardById.$CARD_ID"],
        ["VAR", "$HIT_POINTS", -1],
        ["COND",
          ["NOT_EQUAL", "$CARD.sides.A.hitPointsFixed", null],
          ["UPDATE_VAR", "$HIT_POINTS", "$CARD.sides.A.hitPointsFixed"],
          ["NOT_EQUAL", "$CARD.sides.A.hitPointsScaling", null],
          ["UPDATE_VAR", "$HIT_POINTS", ["MULTIPLY", "$CARD.sides.A.hitPointsScaling", "$GAME.numPlayers"]]
        ],
        ["COND",
          ["GREATER_THAN", "$INCREASE_HIT_POINTS", 0],
          ["UPDATE_VAR", "$HIT_POINTS", ["ADD", "$HIT_POINTS", "$INCREASE_HIT_POINTS"]]
        ],
        ["LOG", "Set villain hit points to {{$HIT_POINTS}}."],
        ["SET", "/villainHitPoints", "$HIT_POINTS"]
      ]
    },
    "TOGGLE_TABLE_BUTTON": {
      "args": ["$SIDE_GROUP_ID"],
      "code": [
        ["COND",
          ["AND",
            "$GAME.playerData.$PLAYER_N.layout.regions.sideGroup.visible",
            ["EQUAL", "$GAME.playerData.$PLAYER_N.layout.regions.sideGroup.groupId", "$SIDE_GROUP_ID"]
          ],
          [
            ["LOG", "{{$PLAYER_N}} updated their layout to display {{$GAME.groupById.$SIDE_GROUP_ID.label}}."],
            ["SET", "/playerData/$PLAYER_N/layout/regions/sideGroup/visible", false],
            ["ADJUST_PLAYER_REGION_SIZES", 100]
          ],
          true,
          [
            ["LOG", "{{$PLAYER_N}} updated their layout to hide {{$GAME.groupById.$SIDE_GROUP_ID.label}}."],
            ["SET", "/playerData/$PLAYER_N/layout/regions/sideGroup/groupId", "$SIDE_GROUP_ID"],
            ["SET", "/playerData/$PLAYER_N/layout/regions/sideGroup/visible", true],
            ["ADJUST_PLAYER_REGION_SIZES", 90]
          ]
        ]
      ]
    },
    "ADJUST_PLAYER_REGION_SIZES": {
      "args": ["$TOTAL_WIDTH"],
      "code": [
        ["VAR", "$WIDTH", ["DIVIDE", "$TOTAL_WIDTH", "$GAME.numPlayers", 1]],
        ["FOR_EACH_START_STOP_STEP", "$I", 1, ["ADD", "$GAME.numPlayers", 1], 1, [
          ["VAR", "$LEFT", ["CALC", "{{$WIDTH}} * ({{$I}} - 1)"]],
          ["SET", "/playerData/$PLAYER_N/layout/regions/player{{$I}}Engaged/width", "{{$WIDTH}}%"],
          ["SET", "/playerData/$PLAYER_N/layout/regions/player{{$I}}Play1/width", "{{$WIDTH}}%"],
          ["SET", "/playerData/$PLAYER_N/layout/regions/player{{$I}}Play2/width", "{{$WIDTH}}%"],
          ["COND", ["DEFINED", "$GAME.playerData.$PLAYER_N.layout.regions.player{{$I}}Play3"], ["SET", "/playerData/$PLAYER_N/layout/regions/player{{$I}}Play3/width", "{{$WIDTH}}%"]],
          ["SET", "/playerData/$PLAYER_N/layout/regions/player{{$I}}Engaged/left", "{{$LEFT}}%"],
          ["SET", "/playerData/$PLAYER_N/layout/regions/player{{$I}}Play1/left", "{{$LEFT}}%"],
          ["SET", "/playerData/$PLAYER_N/layout/regions/player{{$I}}Play2/left", "{{$LEFT}}%"],
          ["COND", ["DEFINED", "$GAME.playerData.$PLAYER_N.layout.regions.player{{$I}}Play3"], ["SET", "/playerData/$PLAYER_N/layout/regions/player{{$I}}Play3/left", "{{$LEFT}}%"]]
        ]]
      ]
    },
    "ALL_PLAYER_DECKS_LOADED": {
      "args": [],
      "code": [
        ["VAR", "$ALL_PLAYER_DECKS_LOADED", true],
        ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
          ["COND",
            ["NOT", "$GAME.playerData.$PLAYER_I.loadedDeck"],
            ["UPDATE_VAR", "$ALL_PLAYER_DECKS_LOADED", false]
          ]
        ]],
        "$ALL_PLAYER_DECKS_LOADED"
      ]
    },
    "TOGGLE_PLAYER_DECK_2": {
      "args": ["$PLAYER_I", "$VISIBILITY"],
      "code": [
        ["COND",
          "$VISIBILITY",
          [
            ["LOG", "{{$PLAYER_I}} updated their layout to display their second deck."],
            ["SET", "/playerData/$PLAYER_I/layout/regions/playerNDeck2/visible", true],
            ["SET", "/playerData/$PLAYER_I/layout/regions/playerNDiscard2/visible", true],
            ["SET", "/playerData/$PLAYER_I/layout/regions/playerNHand/width", "60%"]
          ],
          ["TRUE"],
          [
            ["LOG", "{{$PLAYER_I}} updated their layout to hide their second deck."],
            ["SET", "/playerData/$PLAYER_I/layout/regions/playerNDeck2/visible", false],
            ["SET", "/playerData/$PLAYER_I/layout/regions/playerNDiscard2/visible", false],
            ["SET", "/playerData/$PLAYER_I/layout/regions/playerNHand/width", "60%"]
          ]
        ]
      ]
    },
    "TOGGLE_ENCOUNTER_2_DECK": {
      "args": ["$VISIBILITY"],
      "code": [
        ["COND",
          "$VISIBILITY",
          [
            ["LOG", "{{$PLAYER_I}} updated the layout to display the second encounter deck."],
            ["UPDATE_LAYOUT", "/layout/regions/sharedEncounter2Deck/visible", true],
            ["UPDATE_LAYOUT", "/layout/regions/sharedEncounter2Discard/visible", true],
            ["UPDATE_LAYOUT", "/layout/regions/sharedEncounterDeck/left", "60%"],
            ["UPDATE_LAYOUT", "/layout/regions/sharedEncounterDiscard/left", "70%"],
            ["UPDATE_LAYOUT", "/layout/regions/sharedVillain/width", "45%"]

          ],
          ["TRUE"],
          [
            ["LOG", "{{$PLAYER_I}} updated the layout to hide the second encounter deck."],
            ["UPDATE_LAYOUT", "/layout/regions/sharedEncounter2Deck/visible", false],
            ["UPDATE_LAYOUT", "/layout/regions/sharedEncounter2Discard/visible", false],
            ["UPDATE_LAYOUT", "/layout/regions/sharedEncounterDeck/left", "80%"],
            ["UPDATE_LAYOUT", "/layout/regions/sharedEncounterDiscard/left", "90%"],
            ["UPDATE_LAYOUT", "/layout/regions/sharedVillain/width", "65%"]
          ]
        ]
      ]
    }
  }
}
