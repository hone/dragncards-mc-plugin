{
  "actionLists": {
    "toggleExhaust": [
      ["COND",
        ["AND",
          ["OR",
            ["EQUAL", "$ACTIVE_CARD.rotation", 90],
            "$ACTIVE_CARD.boost"
          ],
          "$ACTIVE_CARD.inPlay"
        ],
        ["READY_CARD", "$ACTIVE_CARD_ID", "$ALIAS_N"],
        ["AND", ["EQUAL", "$ACTIVE_CARD.rotation", 0], "$ACTIVE_CARD.inPlay"],
        ["EXHAUST_CARD", "$ACTIVE_CARD_ID", "$ALIAS_N"]
      ]
    ],
    "discardRandomCard": [
      ["VAR", "$GROUP_ID", "{{$PLAYER_N}}Hand"],
      ["VAR", "$CURRENT_HAND_SIZE", ["LENGTH", "$GAME.groupById.$GROUP_ID.stackIds"]],
      ["VAR", "$INDEX", ["RANDOM_INT", 0, ["SUBTRACT", "$CURRENT_HAND_SIZE", 1]]],
      ["DISCARD_CARD", "$GAME.groupById.$GROUP_ID.parentCardIds.[$INDEX]"]
    ],
    "flipCard": [
      ["COND",
          // A always flips to B
        ["EQUAL", "$ACTIVE_CARD.currentSide", "A"],
        [
          ["LOG", "{{$ALIAS_N}} flipped {{$ACTIVE_FACE.name}} facedown."],
          ["SET", "/cardById/$ACTIVE_CARD_ID/currentSide", "B"]
        ],
          // IF there's no side C, it's B->A
        ["EQUAL", "$ACTIVE_CARD.sides.C", null],
        [
          ["SET", "/cardById/$ACTIVE_CARD_ID/currentSide", "A"],
          ["LOG", "{{$ALIAS_N}} flipped {{$ACTIVE_FACE.name}} faceup."]
        ],
          // if you're on side C, flip to A
        ["EQUAL", "$ACTIVE_CARD.currentSide", "C"],
        [
          ["SET", "/cardById/$ACTIVE_CARD_ID/currentSide", "A"],
          ["LOG", "{{$ALIAS_N}} flipped {{$ACTIVE_FACE.name}} faceup."]       
        ],
          // Otherwise this is B->C
        true,
        [
          ["SET", "/cardById/$ACTIVE_CARD_ID/currentSide", "C"],
          ["LOG", "{{$ALIAS_N}} flipped {{$ACTIVE_FACE.name}} faceup."]
        ]
      ]
    ],
    "loadMode": [
      ["COND",
        "$GAME.loadMode",
        [
          ["VAR", "$EXPERT_SET", null],
          ["COND",
            ["EQUAL", "$GAME.mode", "expert"],
            ["UPDATE_VAR", "$EXPERT_SET", "$GAME.expertSet"]
          ],
          ["LOAD_MODE_CARDS", "$GAME.standardSet", "$EXPERT_SET"]
        ]
      ]
    ],
    "shuffleIntoDeck": [
      ["MOVE_CARD", "$ACTIVE_CARD_ID", "$ACTIVE_CARD.deckGroupId", 0],
      ["VAR", "$GROUP_ID", "$ACTIVE_CARD.deckGroupId"],
      ["SHUFFLE_GROUP", "$GROUP_ID"],
      ["LOG", "{{$ALIAS_N}} shuffled {{$ACTIVE_FACE.name}} into {{$GAME.groupById.$GROUP_ID.label}}."]
    ],
    "zeroTokens": [
      ["SET", "/cardById/$ACTIVE_CARD_ID/tokens", {}],
      ["LOG", "{{$ALIAS_N}} removed all tokens from {{$ACTIVE_FACE.name}}."]
    ],
    "dealEncounterFaceup": ["DEAL_ENCOUNTER_CARD", true],
    "dealEncounterFacedown": ["DEAL_ENCOUNTER_CARD", false],
    "dealSecondFaceup": ["DEAL_ENCOUNTER_CARD", true, "sharedEncounter2Deck"],
    "dealSecondFacedown": ["DEAL_ENCOUNTER_CARD", false, "sharedEncounter2Deck"],
    "dealThirdFaceup": ["DEAL_ENCOUNTER_CARD", true, "sharedEncounter3Deck"],
    "dealThirdFacedown": ["DEAL_ENCOUNTER_CARD", false, "sharedEncounter3Deck"],
    "drawBoost": [
      ["COND",
        ["EQUAL", ["LENGTH", "$GAME.groupById.sharedEncounterDeck.stackIds"], 0],
        [
          ["COND",
            ["DEFINED", "$ALIAS_N"],
            ["LOG", "{{$ALIAS_N}} shuffled the encounter discard pile into the encounter deck."]
          ],
          ["MOVE_STACKS", "sharedEncounterDiscard", "sharedEncounterDeck", ["LENGTH", "$GAME.groupById.sharedEncounterDiscard.stackIds"], "shuffle"]
        ]
      ],
      ["COND",
        ["GREATER_THAN", ["LENGTH", "$GAME.groupById.sharedEncounterDeck.stackIds"], 0],
        [
          ["VAR", "$CARD_ID", "$GAME.groupById.sharedEncounterDeck.parentCardIds.[0]"],
          ["MOVE_CARD", "$CARD_ID", "{{$PLAYER_N}}Engaged", -1, 0, {"allowFlip": false}],
          ["SET", "/cardById/$CARD_ID/rotation", -30],
          ["SET", "/cardById/$CARD_ID/boost", true],
          ["COND",
            ["DEFINED", "$ALIAS_N"],
            ["LOG", "{{$ALIAS_N}} drew a boost card."]
          ]
        ],
        true,
        ["LOG", "No encounter deck to draw boost card."]
      ]
    ],
    "mulliganDrawHand": [
      ["COND",
        ["EQUAL", "$GAME.roundNumber", 0],
        ["LOG", "{{$ALIAS_N}} mulliganed."]
      ],
      ["DRAW_HAND", "$PLAYER_N", "$ALIAS_N"]
    ],
    "shadowsOfThePast": [
      ["VAR", "$GROUP_ID", "{{$PLAYER_N}}NemesisSet"],
      ["FOR_EACH_VAL", "$CARD_ID", "$GAME.groupById.$GROUP_ID.parentCardIds", [
        ["VAR", "$CARD", "$GAME.cardById.$CARD_ID"],
        ["COND",
          "$CARD.sides.A.nemesisMinion",
          ["MOVE_CARD", "$CARD_ID", "{{$PLAYER_N}}Engaged", -1],
          ["EQUAL", "$CARD.sides.A.type", "Side Scheme"],
          ["MOVE_CARD", "$CARD_ID", "sharedVillain", -1],
          true,
          ["MOVE_CARD", "$CARD_ID", "sharedEncounterDeck", 0]
        ]
      ]],
      ["SHUFFLE_GROUP", "$GROUP_ID"]
    ],
    "playerEndPhase": [
      ["LOG", "Player Phase - Ends"],
      ["FOR_EACH_VAL", "$PLAYER", "$PLAYER_ORDER", [
        ["READY_ALL", "$PLAYER", "$GAME.playerInfo.$PLAYER.alias"],
        ["DRAW_HAND", "$PLAYER", "$GAME.playerInfo.$PLAYER.alias"]
      ]],
      ["VAR", "$CARD_ID", "$GAME.groupById.sharedMainScheme.parentCardIds.[0]]"],
      ["VAR", "$CARD", "$GAME.cardById.$CARD_ID"],
      ["VAR", "$SCHEME_ACCELERATION", ["ADD", "$CARD.sides.B.accelerationFixed", ["MULTIPLY", "$CARD.sides.B.accelerationScaling", "$GAME.numPlayers"]]],
      ["VAR", "$ACCELERATION_ICONS", 0],
      ["FOR_EACH_VAL", "$CARD",
        ["FILTER_CARDS",
          "$CARD",
          ["AND",
            "$CARD.inPlay",
            ["GREATER_THAN", "$CARD.currentFace.acceleration", 0]
          ]
        ],
        ["UPDATE_VAR", "$ACCELERATION_ICONS", ["ADD", "$ACCELERATION_ICONS", "$CARD.currentFace.acceleration"]]
      ],
      ["VAR", "$THREAT_INCREASE", ["ADD", ["ADD", "$SCHEME_ACCELERATION", "$CARD.tokens.acceleration"], "$ACCELERATION_ICONS"]],
      ["INCREASE_VAL", "/cardById/$CARD_ID/tokens/threat", "$THREAT_INCREASE"],
      ["LOG", "Villain Phase - Begins"],
      ["LOG", "Villain Phase - Acceleration: Place {{$THREAT_INCREASE}} on {{$CARD.sides.B.name}}."],
      ["SET", "/stepId", "2.1"]
    ],
    "villainEncounterPhase": [
      ["LOG", "Villain Phase - Encounter"],
      ["SET", "/stepId", "2.3"],
      ["FOR_EACH_VAL", "$PLAYER_N", "$PLAYER_ORDER", ["ACTION_LIST", "dealEncounterFacedown"]]
    ],
    "villainEndPhase": [
      ["LOG", "Villain Phase - Ends"],
      ["SET", "/firstPlayer", ["NEXT_PLAYER", "$GAME.firstPlayer"]],
      ["SET", "/stepId", "1.1"],
      ["INCREASE_VAL", "/roundNumber", 1],
      ["LOG", "Player Phase - Begins"]
    ],
    "multipleDoubleSidedVillains": [
      ["SHUFFLE_GROUP", "sharedVillainDeck"],
      ["COND",
        ["EQUAL", "$GAME.mode", "expert"],
        ["FOR_EACH_VAL", "$CARD_ID", "$GAME.groupById.sharedVillainDeck.parentCardIds", [
          ["SET", "/cardById/$CARD_ID/currentSide", "B"]
        ]]
      ],
      ["MOVE_CARD", "$GAME.groupById.sharedVillainDeck.parentCardIds.[0]", "sharedVillain", 0]
    ],
    "discardMinion": [
      "DISCARD_UNTIL", "sharedEncounterDeck", "{{$PLAYER_N}}Engaged",
      ["POINTER",
        ["EQUAL", "$CARD_ITEM.sides.A.type", "Minion"]
      ]
    ],
    "discardSideScheme": ["DISCARD_UNTIL", "sharedEncounterDeck", "{{$PLAYER_N}}Play1",
      ["POINTER",
        ["EQUAL", "$CARD.sides.A.type", "Side Scheme"]
      ]
    ]
  }
}
